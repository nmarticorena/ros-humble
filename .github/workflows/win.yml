jobs:
  stage_0_job_0:
    name: ament-package ament-cmake-core ros-environment
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs: []
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-package ros-humble-ament-cmake-core ros-humble-ros-environment
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-package ros-humble-ament-cmake-core ros-humble-ros-environment
  stage_1_job_1:
    name: ament-lint ament-cmake-python gtest-vendor ament-cmake-libraries ament-cmake-include-directories
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-lint ros-humble-ament-cmake-python ros-humble-gtest-vendor
          ros-humble-ament-cmake-libraries ros-humble-ament-cmake-include-directories
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-lint ros-humble-ament-cmake-python ros-humble-gtest-vendor
        ros-humble-ament-cmake-libraries ros-humble-ament-cmake-include-directories
  stage_1_job_2:
    name: ament-cmake-export-libraries ament-cmake-version ament-cmake-export-link-flags
      ament-cmake-export-include-directories ament-cmake-export-definitions
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-export-libraries ros-humble-ament-cmake-version
          ros-humble-ament-cmake-export-link-flags ros-humble-ament-cmake-export-include-directories
          ros-humble-ament-cmake-export-definitions
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-export-libraries ros-humble-ament-cmake-version
        ros-humble-ament-cmake-export-link-flags ros-humble-ament-cmake-export-include-directories
        ros-humble-ament-cmake-export-definitions
  stage_1_job_3:
    name: ament-pycodestyle ament-cppcheck osrf-pycommon google-benchmark-vendor osrf-testing-tools-cpp
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-pycodestyle ros-humble-ament-cppcheck ros-humble-osrf-pycommon
          ros-humble-google-benchmark-vendor ros-humble-osrf-testing-tools-cpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-pycodestyle ros-humble-ament-cppcheck ros-humble-osrf-pycommon
        ros-humble-google-benchmark-vendor ros-humble-osrf-testing-tools-cpp
  stage_1_job_4:
    name: test-interface-files fastcdr iceoryx-hoofs urdfdom-headers ruckig
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-test-interface-files ros-humble-fastcdr ros-humble-iceoryx-hoofs
          ros-humble-urdfdom-headers ros-humble-ruckig
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-test-interface-files ros-humble-fastcdr ros-humble-iceoryx-hoofs
        ros-humble-urdfdom-headers ros-humble-ruckig
  stage_1_job_5:
    name: ompl sdformat-test-files apriltag
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ompl ros-humble-sdformat-test-files ros-humble-apriltag
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ompl ros-humble-sdformat-test-files ros-humble-apriltag
  stage_2_job_6:
    name: ament-flake8 ament-cmake-test ament-cmake-target-dependencies ament-cmake-export-targets
      ament-cmake-export-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    - stage_1_job_2
    - stage_1_job_3
    - stage_1_job_4
    - stage_1_job_5
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-flake8 ros-humble-ament-cmake-test ros-humble-ament-cmake-target-dependencies
          ros-humble-ament-cmake-export-targets ros-humble-ament-cmake-export-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-flake8 ros-humble-ament-cmake-test ros-humble-ament-cmake-target-dependencies
        ros-humble-ament-cmake-export-targets ros-humble-ament-cmake-export-interfaces
  stage_2_job_7:
    name: ament-cmake-export-dependencies gmock-vendor iceoryx-posh backward-ros mrt-cmake-modules
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    - stage_1_job_2
    - stage_1_job_3
    - stage_1_job_4
    - stage_1_job_5
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-export-dependencies ros-humble-gmock-vendor
          ros-humble-iceoryx-posh ros-humble-backward-ros ros-humble-mrt-cmake-modules
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-export-dependencies ros-humble-gmock-vendor
        ros-humble-iceoryx-posh ros-humble-backward-ros ros-humble-mrt-cmake-modules
  stage_3_job_8:
    name: ament-pep257 ament-cmake-gtest ament-lint-auto ament-cmake-google-benchmark
      ament-cmake-pytest
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_6
    - stage_2_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-pep257 ros-humble-ament-cmake-gtest ros-humble-ament-lint-auto
          ros-humble-ament-cmake-google-benchmark ros-humble-ament-cmake-pytest
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-pep257 ros-humble-ament-cmake-gtest ros-humble-ament-lint-auto
        ros-humble-ament-cmake-google-benchmark ros-humble-ament-cmake-pytest
  stage_3_job_9:
    name: iceoryx-binding-c ament-cmake-catch2 lanelet2-core ament-mypy lanelet2-projection
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_6
    - stage_2_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-iceoryx-binding-c ros-humble-ament-cmake-catch2
          ros-humble-lanelet2-core ros-humble-ament-mypy ros-humble-lanelet2-projection
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-iceoryx-binding-c ros-humble-ament-cmake-catch2 ros-humble-lanelet2-core
        ros-humble-ament-mypy ros-humble-lanelet2-projection
  stage_3_job_10:
    name: ament-cmake-vendor-package ament-cmake-nose
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_6
    - stage_2_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-vendor-package ros-humble-ament-cmake-nose
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-vendor-package ros-humble-ament-cmake-nose
  stage_4_job_11:
    name: ament-copyright ament-cmake-gen-version-h ament-cmake-gmock cyclonedds lanelet2-traffic-rules
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_3_job_8
    - stage_3_job_9
    - stage_3_job_10
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-copyright ros-humble-ament-cmake-gen-version-h
          ros-humble-ament-cmake-gmock ros-humble-cyclonedds ros-humble-lanelet2-traffic-rules
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-copyright ros-humble-ament-cmake-gen-version-h
        ros-humble-ament-cmake-gmock ros-humble-cyclonedds ros-humble-lanelet2-traffic-rules
  stage_4_job_12:
    name: lanelet2-maps tf-transformations
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_3_job_8
    - stage_3_job_9
    - stage_3_job_10
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-lanelet2-maps ros-humble-tf-transformations
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-lanelet2-maps ros-humble-tf-transformations
  stage_5_job_13:
    name: ament-lint-cmake ament-cmake ament-xmllint ament-cpplint ament-index-python
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_4_job_11
    - stage_4_job_12
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-lint-cmake ros-humble-ament-cmake ros-humble-ament-xmllint
          ros-humble-ament-cpplint ros-humble-ament-index-python
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-lint-cmake ros-humble-ament-cmake ros-humble-ament-xmllint
        ros-humble-ament-cpplint ros-humble-ament-index-python
  stage_5_job_14:
    name: domain-coordinator generate-parameter-library-py ament-clang-format ament-pclint
      lanelet2-routing
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_4_job_11
    - stage_4_job_12
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-domain-coordinator ros-humble-generate-parameter-library-py
          ros-humble-ament-clang-format ros-humble-ament-pclint ros-humble-lanelet2-routing
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-domain-coordinator ros-humble-generate-parameter-library-py
        ros-humble-ament-clang-format ros-humble-ament-pclint ros-humble-lanelet2-routing
  stage_5_job_15:
    name: lanelet2-matching
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_4_job_11
    - stage_4_job_12
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-lanelet2-matching
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-lanelet2-matching
  stage_6_job_16:
    name: ament-cmake-lint-cmake uncrustify-vendor launch rosidl-cli rpyutils
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-lint-cmake ros-humble-uncrustify-vendor
          ros-humble-launch ros-humble-rosidl-cli ros-humble-rpyutils
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-lint-cmake ros-humble-uncrustify-vendor ros-humble-launch
        ros-humble-rosidl-cli ros-humble-rpyutils
  stage_6_job_17:
    name: pybind11-vendor tinyxml-vendor tinyxml2-vendor tl-expected tcb-span
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-pybind11-vendor ros-humble-tinyxml-vendor ros-humble-tinyxml2-vendor
          ros-humble-tl-expected ros-humble-tcb-span
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-pybind11-vendor ros-humble-tinyxml-vendor ros-humble-tinyxml2-vendor
        ros-humble-tl-expected ros-humble-tcb-span
  stage_6_job_18:
    name: libcurl-vendor xacro moveit-resources-panda-description random-numbers eigen-stl-containers
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-libcurl-vendor ros-humble-xacro ros-humble-moveit-resources-panda-description
          ros-humble-random-numbers ros-humble-eigen-stl-containers
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-libcurl-vendor ros-humble-xacro ros-humble-moveit-resources-panda-description
        ros-humble-random-numbers ros-humble-eigen-stl-containers
  stage_6_job_19:
    name: moveit-resources-pr2-description angles yaml-cpp-vendor zstd-vendor moveit-resources-fanuc-description
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-resources-pr2-description ros-humble-angles
          ros-humble-yaml-cpp-vendor ros-humble-zstd-vendor ros-humble-moveit-resources-fanuc-description
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-resources-pr2-description ros-humble-angles ros-humble-yaml-cpp-vendor
        ros-humble-zstd-vendor ros-humble-moveit-resources-fanuc-description
  stage_6_job_20:
    name: sqlite3-vendor shared-queues-vendor ament-cmake-auto ros2-control-test-assets
      gazebo-dev
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-sqlite3-vendor ros-humble-shared-queues-vendor
          ros-humble-ament-cmake-auto ros-humble-ros2-control-test-assets ros-humble-gazebo-dev
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-sqlite3-vendor ros-humble-shared-queues-vendor ros-humble-ament-cmake-auto
        ros-humble-ros2-control-test-assets ros-humble-gazebo-dev
  stage_6_job_21:
    name: sdl2-vendor dynamixel-sdk lanelet2-python lanelet2-validation turtlebot3-cartographer
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-sdl2-vendor ros-humble-dynamixel-sdk ros-humble-lanelet2-python
          ros-humble-lanelet2-validation ros-humble-turtlebot3-cartographer
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-sdl2-vendor ros-humble-dynamixel-sdk ros-humble-lanelet2-python
        ros-humble-lanelet2-validation ros-humble-turtlebot3-cartographer
  stage_6_job_22:
    name: ublox-serialization geometry-tutorials
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_13
    - stage_5_job_14
    - stage_5_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ublox-serialization ros-humble-geometry-tutorials
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ublox-serialization ros-humble-geometry-tutorials
  stage_7_job_23:
    name: ament-cmake-copyright ament-uncrustify launch-yaml launch-xml mcap-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_6_job_16
    - stage_6_job_17
    - stage_6_job_18
    - stage_6_job_19
    - stage_6_job_20
    - stage_6_job_21
    - stage_6_job_22
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-copyright ros-humble-ament-uncrustify
          ros-humble-launch-yaml ros-humble-launch-xml ros-humble-mcap-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-copyright ros-humble-ament-uncrustify ros-humble-launch-yaml
        ros-humble-launch-xml ros-humble-mcap-vendor
  stage_7_job_24:
    name: moveit-resources-prbt-support
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_6_job_16
    - stage_6_job_17
    - stage_6_job_18
    - stage_6_job_19
    - stage_6_job_20
    - stage_6_job_21
    - stage_6_job_22
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-resources-prbt-support
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-resources-prbt-support
  stage_8_job_25:
    name: ament-cmake-xmllint ament-cmake-uncrustify ament-cmake-pep257 ament-cmake-flake8
      ament-cmake-cpplint
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_7_job_23
    - stage_7_job_24
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-xmllint ros-humble-ament-cmake-uncrustify
          ros-humble-ament-cmake-pep257 ros-humble-ament-cmake-flake8 ros-humble-ament-cmake-cpplint
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-xmllint ros-humble-ament-cmake-uncrustify
        ros-humble-ament-cmake-pep257 ros-humble-ament-cmake-flake8 ros-humble-ament-cmake-cpplint
  stage_8_job_26:
    name: ament-cmake-cppcheck launch-testing eigen3-cmake-module ament-cmake-clang-format
      ament-cmake-pclint
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_7_job_23
    - stage_7_job_24
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-cppcheck ros-humble-launch-testing
          ros-humble-eigen3-cmake-module ros-humble-ament-cmake-clang-format ros-humble-ament-cmake-pclint
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-cppcheck ros-humble-launch-testing ros-humble-eigen3-cmake-module
        ros-humble-ament-cmake-clang-format ros-humble-ament-cmake-pclint
  stage_9_job_27:
    name: ament-lint-common foonathan-memory-vendor rviz-ogre-vendor rviz-assimp-vendor
      ignition-cmake2-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_8_job_25
    - stage_8_job_26
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-lint-common ros-humble-foonathan-memory-vendor
          ros-humble-rviz-ogre-vendor ros-humble-rviz-assimp-vendor ros-humble-ignition-cmake2-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-lint-common ros-humble-foonathan-memory-vendor
        ros-humble-rviz-ogre-vendor ros-humble-rviz-assimp-vendor ros-humble-ignition-cmake2-vendor
  stage_9_job_28:
    name: launch-pytest
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_8_job_25
    - stage_8_job_26
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-pytest
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-pytest
  stage_10_job_29:
    name: python-cmake-module performance-test-fixture ament-cmake-ros rosidl-adapter
      rosidl-typesupport-interface
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_27
    - stage_9_job_28
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-python-cmake-module ros-humble-performance-test-fixture
          ros-humble-ament-cmake-ros ros-humble-rosidl-adapter ros-humble-rosidl-typesupport-interface
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-python-cmake-module ros-humble-performance-test-fixture
        ros-humble-ament-cmake-ros ros-humble-rosidl-adapter ros-humble-rosidl-typesupport-interface
  stage_10_job_30:
    name: fastrtps-cmake-module fastrtps rti-connext-dds-cmake-module rmw-implementation-cmake
      ament-index-cpp
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_27
    - stage_9_job_28
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-fastrtps-cmake-module ros-humble-fastrtps ros-humble-rti-connext-dds-cmake-module
          ros-humble-rmw-implementation-cmake ros-humble-ament-index-cpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-fastrtps-cmake-module ros-humble-fastrtps ros-humble-rti-connext-dds-cmake-module
        ros-humble-rmw-implementation-cmake ros-humble-ament-index-cpp
  stage_10_job_31:
    name: spdlog-vendor orocos-kdl-vendor python-qt-binding moveit-common smclib
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_27
    - stage_9_job_28
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-spdlog-vendor ros-humble-orocos-kdl-vendor ros-humble-python-qt-binding
          ros-humble-moveit-common ros-humble-smclib
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-spdlog-vendor ros-humble-orocos-kdl-vendor ros-humble-python-qt-binding
        ros-humble-moveit-common ros-humble-smclib
  stage_10_job_32:
    name: ignition-math6-vendor tango-icons-vendor keyboard-handler asio-cmake-module
      apex-test-tools
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_27
    - stage_9_job_28
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ignition-math6-vendor ros-humble-tango-icons-vendor
          ros-humble-keyboard-handler ros-humble-asio-cmake-module ros-humble-apex-test-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ignition-math6-vendor ros-humble-tango-icons-vendor ros-humble-keyboard-handler
        ros-humble-asio-cmake-module ros-humble-apex-test-tools
  stage_10_job_33:
    name: mimick-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_27
    - stage_9_job_28
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-mimick-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-mimick-vendor
  stage_11_job_34:
    name: launch-testing-ament-cmake rosidl-parser tracetools console-bridge-vendor
      urdf-parser-plugin
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_29
    - stage_10_job_30
    - stage_10_job_31
    - stage_10_job_32
    - stage_10_job_33
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-testing-ament-cmake ros-humble-rosidl-parser
          ros-humble-tracetools ros-humble-console-bridge-vendor ros-humble-urdf-parser-plugin
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-testing-ament-cmake ros-humble-rosidl-parser ros-humble-tracetools
        ros-humble-console-bridge-vendor ros-humble-urdf-parser-plugin
  stage_11_job_35:
    name: python-orocos-kdl-vendor resource-retriever qt-gui tracetools-image-pipeline
      qt-gui-py-common
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_29
    - stage_10_job_30
    - stage_10_job_31
    - stage_10_job_32
    - stage_10_job_33
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-python-orocos-kdl-vendor ros-humble-resource-retriever
          ros-humble-qt-gui ros-humble-tracetools-image-pipeline ros-humble-qt-gui-py-common
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-python-orocos-kdl-vendor ros-humble-resource-retriever
        ros-humble-qt-gui ros-humble-tracetools-image-pipeline ros-humble-qt-gui-py-common
  stage_11_job_36:
    name: qt-dotgraph
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_29
    - stage_10_job_30
    - stage_10_job_31
    - stage_10_job_32
    - stage_10_job_33
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-qt-dotgraph
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-qt-dotgraph
  stage_12_job_37:
    name: rcutils rosidl-cmake urdfdom rviz-rendering
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_11_job_34
    - stage_11_job_35
    - stage_11_job_36
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcutils ros-humble-rosidl-cmake ros-humble-urdfdom
          ros-humble-rviz-rendering
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcutils ros-humble-rosidl-cmake ros-humble-urdfdom ros-humble-rviz-rendering
  stage_13_job_38:
    name: rosidl-runtime-c rcpputils rviz-rendering-tests rosidl-generator-dds-idl
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_12_job_37
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-runtime-c ros-humble-rcpputils ros-humble-rviz-rendering-tests
          ros-humble-rosidl-generator-dds-idl
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-runtime-c ros-humble-rcpputils ros-humble-rviz-rendering-tests
        ros-humble-rosidl-generator-dds-idl
  stage_14_job_39:
    name: rosidl-runtime-cpp rosidl-generator-c rmw rosidl-typesupport-introspection-c
      libyaml-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_13_job_38
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-runtime-cpp ros-humble-rosidl-generator-c
          ros-humble-rmw ros-humble-rosidl-typesupport-introspection-c ros-humble-libyaml-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-runtime-cpp ros-humble-rosidl-generator-c ros-humble-rmw
        ros-humble-rosidl-typesupport-introspection-c ros-humble-libyaml-vendor
  stage_14_job_40:
    name: rcl-logging-interface class-loader
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_13_job_38
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcl-logging-interface ros-humble-class-loader
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcl-logging-interface ros-humble-class-loader
  stage_15_job_41:
    name: rosidl-generator-cpp rosidl-typesupport-introspection-cpp rcl-yaml-param-parser
      rcl-logging-spdlog pluginlib
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_14_job_39
    - stage_14_job_40
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-generator-cpp ros-humble-rosidl-typesupport-introspection-cpp
          ros-humble-rcl-yaml-param-parser ros-humble-rcl-logging-spdlog ros-humble-pluginlib
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-generator-cpp ros-humble-rosidl-typesupport-introspection-cpp
        ros-humble-rcl-yaml-param-parser ros-humble-rcl-logging-spdlog ros-humble-pluginlib
  stage_16_job_42:
    name: rosidl-typesupport-fastrtps-cpp urdf
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_15_job_41
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-typesupport-fastrtps-cpp ros-humble-urdf
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-typesupport-fastrtps-cpp ros-humble-urdf
  stage_17_job_43:
    name: rosidl-typesupport-fastrtps-c kdl-parser srdfdom velodyne-description turtlebot3-description
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_16_job_42
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-typesupport-fastrtps-c ros-humble-kdl-parser
          ros-humble-srdfdom ros-humble-velodyne-description ros-humble-turtlebot3-description
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-typesupport-fastrtps-c ros-humble-kdl-parser ros-humble-srdfdom
        ros-humble-velodyne-description ros-humble-turtlebot3-description
  stage_17_job_44:
    name: sdformat-urdf
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_16_job_42
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-sdformat-urdf
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-sdformat-urdf
  stage_18_job_45:
    name: rosidl-typesupport-c rosidl-typesupport-cpp rosidl-generator-py
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_17_job_43
    - stage_17_job_44
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-typesupport-c ros-humble-rosidl-typesupport-cpp
          ros-humble-rosidl-generator-py
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-typesupport-c ros-humble-rosidl-typesupport-cpp
        ros-humble-rosidl-generator-py
  stage_19_job_46:
    name: rosidl-default-runtime rosidl-default-generators
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_18_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-default-runtime ros-humble-rosidl-default-generators
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-default-runtime ros-humble-rosidl-default-generators
  stage_20_job_47:
    name: unique-identifier-msgs builtin-interfaces rmw-dds-common lifecycle-msgs
      std-srvs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_19_job_46
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-unique-identifier-msgs ros-humble-builtin-interfaces
          ros-humble-rmw-dds-common ros-humble-lifecycle-msgs ros-humble-std-srvs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-unique-identifier-msgs ros-humble-builtin-interfaces
        ros-humble-rmw-dds-common ros-humble-lifecycle-msgs ros-humble-std-srvs
  stage_20_job_48:
    name: system-modes-msgs ublox-ubx-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_19_job_46
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-system-modes-msgs ros-humble-ublox-ubx-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-system-modes-msgs ros-humble-ublox-ubx-interfaces
  stage_21_job_49:
    name: action-msgs rmw-fastrtps-shared-cpp rmw-connextdds-common rmw-cyclonedds-cpp
      rcl-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_20_job_47
    - stage_20_job_48
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-action-msgs ros-humble-rmw-fastrtps-shared-cpp
          ros-humble-rmw-connextdds-common ros-humble-rmw-cyclonedds-cpp ros-humble-rcl-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-action-msgs ros-humble-rmw-fastrtps-shared-cpp ros-humble-rmw-connextdds-common
        ros-humble-rmw-cyclonedds-cpp ros-humble-rcl-interfaces
  stage_21_job_50:
    name: std-msgs statistics-msgs rosgraph-msgs controller-manager-msgs rosbag2-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_20_job_47
    - stage_20_job_48
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-std-msgs ros-humble-statistics-msgs ros-humble-rosgraph-msgs
          ros-humble-controller-manager-msgs ros-humble-rosbag2-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-std-msgs ros-humble-statistics-msgs ros-humble-rosgraph-msgs
        ros-humble-controller-manager-msgs ros-humble-rosbag2-interfaces
  stage_21_job_51:
    name: topic-tools-interfaces rosbridge-msgs pendulum-msgs robot-controllers-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_20_job_47
    - stage_20_job_48
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-topic-tools-interfaces ros-humble-rosbridge-msgs
          ros-humble-pendulum-msgs ros-humble-robot-controllers-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-topic-tools-interfaces ros-humble-rosbridge-msgs ros-humble-pendulum-msgs
        ros-humble-robot-controllers-msgs
  stage_22_job_52:
    name: test-msgs rmw-connextdds composition-interfaces geometry-msgs actionlib-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_49
    - stage_21_job_50
    - stage_21_job_51
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-test-msgs ros-humble-rmw-connextdds ros-humble-composition-interfaces
          ros-humble-geometry-msgs ros-humble-actionlib-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-test-msgs ros-humble-rmw-connextdds ros-humble-composition-interfaces
        ros-humble-geometry-msgs ros-humble-actionlib-msgs
  stage_22_job_53:
    name: bond rosbag2-storage-mcap-testdata ackermann-msgs example-interfaces ros2cli-test-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_49
    - stage_21_job_50
    - stage_21_job_51
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-bond ros-humble-rosbag2-storage-mcap-testdata
          ros-humble-ackermann-msgs ros-humble-example-interfaces ros-humble-ros2cli-test-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-bond ros-humble-rosbag2-storage-mcap-testdata ros-humble-ackermann-msgs
        ros-humble-example-interfaces ros-humble-ros2cli-test-interfaces
  stage_22_job_54:
    name: teleop-tools-msgs rosapi-msgs turtlebot3-msgs gps-msgs udp-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_49
    - stage_21_job_50
    - stage_21_job_51
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-teleop-tools-msgs ros-humble-rosapi-msgs ros-humble-turtlebot3-msgs
          ros-humble-gps-msgs ros-humble-udp-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-teleop-tools-msgs ros-humble-rosapi-msgs ros-humble-turtlebot3-msgs
        ros-humble-gps-msgs ros-humble-udp-msgs
  stage_22_job_55:
    name: action-tutorials-interfaces rtcm-msgs apriltag-msgs stubborn-buddies-msgs
      event-camera-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_49
    - stage_21_job_50
    - stage_21_job_51
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-action-tutorials-interfaces ros-humble-rtcm-msgs
          ros-humble-apriltag-msgs ros-humble-stubborn-buddies-msgs ros-humble-event-camera-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-action-tutorials-interfaces ros-humble-rtcm-msgs ros-humble-apriltag-msgs
        ros-humble-stubborn-buddies-msgs ros-humble-event-camera-msgs
  stage_22_job_56:
    name: velodyne-msgs ur-dashboard-msgs ublox-ubx-msgs plotjuggler-msgs actuator-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_49
    - stage_21_job_50
    - stage_21_job_51
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-velodyne-msgs ros-humble-ur-dashboard-msgs ros-humble-ublox-ubx-msgs
          ros-humble-plotjuggler-msgs ros-humble-actuator-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-velodyne-msgs ros-humble-ur-dashboard-msgs ros-humble-ublox-ubx-msgs
        ros-humble-plotjuggler-msgs ros-humble-actuator-msgs
  stage_23_job_57:
    name: rmw-fastrtps-dynamic-cpp rmw-fastrtps-cpp sensor-msgs rosidl-runtime-py
      tf2
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_52
    - stage_22_job_53
    - stage_22_job_54
    - stage_22_job_55
    - stage_22_job_56
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rmw-fastrtps-dynamic-cpp ros-humble-rmw-fastrtps-cpp
          ros-humble-sensor-msgs ros-humble-rosidl-runtime-py ros-humble-tf2
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rmw-fastrtps-dynamic-cpp ros-humble-rmw-fastrtps-cpp
        ros-humble-sensor-msgs ros-humble-rosidl-runtime-py ros-humble-tf2
  stage_23_job_58:
    name: tf2-msgs shape-msgs trajectory-msgs octomap-msgs nav-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_52
    - stage_22_job_53
    - stage_22_job_54
    - stage_22_job_55
    - stage_22_job_56
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-tf2-msgs ros-humble-shape-msgs ros-humble-trajectory-msgs
          ros-humble-octomap-msgs ros-humble-nav-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-tf2-msgs ros-humble-shape-msgs ros-humble-trajectory-msgs
        ros-humble-octomap-msgs ros-humble-nav-msgs
  stage_23_job_59:
    name: diagnostic-msgs nav-2d-msgs vision-msgs geographic-msgs graph-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_52
    - stage_22_job_53
    - stage_22_job_54
    - stage_22_job_55
    - stage_22_job_56
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-diagnostic-msgs ros-humble-nav-2d-msgs ros-humble-vision-msgs
          ros-humble-geographic-msgs ros-humble-graph-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-diagnostic-msgs ros-humble-nav-2d-msgs ros-humble-vision-msgs
        ros-humble-geographic-msgs ros-humble-graph-msgs
  stage_23_job_60:
    name: ur-msgs marker-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_52
    - stage_22_job_53
    - stage_22_job_54
    - stage_22_job_55
    - stage_22_job_56
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ur-msgs ros-humble-marker-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ur-msgs ros-humble-marker-msgs
  stage_24_job_61:
    name: rmw-implementation object-recognition-msgs visualization-msgs stereo-msgs
      sensor-msgs-py
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_57
    - stage_23_job_58
    - stage_23_job_59
    - stage_23_job_60
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rmw-implementation ros-humble-object-recognition-msgs
          ros-humble-visualization-msgs ros-humble-stereo-msgs ros-humble-sensor-msgs-py
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rmw-implementation ros-humble-object-recognition-msgs
        ros-humble-visualization-msgs ros-humble-stereo-msgs ros-humble-sensor-msgs-py
  stage_24_job_62:
    name: map-msgs control-msgs cv-bridge tf2-eigen-kdl dwb-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_57
    - stage_23_job_58
    - stage_23_job_59
    - stage_23_job_60
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-map-msgs ros-humble-control-msgs ros-humble-cv-bridge
          ros-humble-tf2-eigen-kdl ros-humble-dwb-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-map-msgs ros-humble-control-msgs ros-humble-cv-bridge
        ros-humble-tf2-eigen-kdl ros-humble-dwb-msgs
  stage_24_job_63:
    name: gazebo-msgs realsense2-camera-msgs image-geometry pcl-msgs geodesy
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_57
    - stage_23_job_58
    - stage_23_job_59
    - stage_23_job_60
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-gazebo-msgs ros-humble-realsense2-camera-msgs
          ros-humble-image-geometry ros-humble-pcl-msgs ros-humble-geodesy
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-gazebo-msgs ros-humble-realsense2-camera-msgs ros-humble-image-geometry
        ros-humble-pcl-msgs ros-humble-geodesy
  stage_25_job_64:
    name: rcl moveit-msgs common-interfaces vision-opencv ros-image-to-qimage
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_61
    - stage_24_job_62
    - stage_24_job_63
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcl ros-humble-moveit-msgs ros-humble-common-interfaces
          ros-humble-vision-opencv ros-humble-ros-image-to-qimage
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcl ros-humble-moveit-msgs ros-humble-common-interfaces
        ros-humble-vision-opencv ros-humble-ros-image-to-qimage
  stage_25_job_65:
    name: geographic-info
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_61
    - stage_24_job_62
    - stage_24_job_63
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-geographic-info
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-geographic-info
  stage_26_job_66:
    name: rcl-lifecycle rcl-action libstatistics-collector
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_25_job_64
    - stage_25_job_65
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcl-lifecycle ros-humble-rcl-action ros-humble-libstatistics-collector
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcl-lifecycle ros-humble-rcl-action ros-humble-libstatistics-collector
  stage_27_job_67:
    name: rclpy rclcpp
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_26_job_66
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rclpy ros-humble-rclcpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rclpy ros-humble-rclcpp
  stage_28_job_68:
    name: launch-ros rclcpp-lifecycle ros2cli rclcpp-components rclcpp-action
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-ros ros-humble-rclcpp-lifecycle ros-humble-ros2cli
          ros-humble-rclcpp-components ros-humble-rclcpp-action
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-ros ros-humble-rclcpp-lifecycle ros-humble-ros2cli
        ros-humble-rclcpp-components ros-humble-rclcpp-action
  stage_28_job_69:
    name: tf2-py rsl geometric-shapes launch-param-builder rosbag2-test-common
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-tf2-py ros-humble-rsl ros-humble-geometric-shapes
          ros-humble-launch-param-builder ros-humble-rosbag2-test-common
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-tf2-py ros-humble-rsl ros-humble-geometric-shapes ros-humble-launch-param-builder
        ros-humble-rosbag2-test-common
  stage_28_job_70:
    name: laser-geometry filters behaviortree-cpp-v3 rqt-gui camera-calibration-parsers
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-laser-geometry ros-humble-filters ros-humble-behaviortree-cpp-v3
          ros-humble-rqt-gui ros-humble-camera-calibration-parsers
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-laser-geometry ros-humble-filters ros-humble-behaviortree-cpp-v3
        ros-humble-rqt-gui ros-humble-camera-calibration-parsers
  stage_28_job_71:
    name: rqt-py-common rosbridge-test-msgs hls-lfcd-lds-driver teleop-twist-keyboard
      dummy-sensors
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-py-common ros-humble-rosbridge-test-msgs ros-humble-hls-lfcd-lds-driver
          ros-humble-teleop-twist-keyboard ros-humble-dummy-sensors
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-py-common ros-humble-rosbridge-test-msgs ros-humble-hls-lfcd-lds-driver
        ros-humble-teleop-twist-keyboard ros-humble-dummy-sensors
  stage_28_job_72:
    name: dummy-map-server demo-nodes-py io-context quality-of-service-demo-py intra-process-demo
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-dummy-map-server ros-humble-demo-nodes-py ros-humble-io-context
          ros-humble-quality-of-service-demo-py ros-humble-intra-process-demo
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-dummy-map-server ros-humble-demo-nodes-py ros-humble-io-context
        ros-humble-quality-of-service-demo-py ros-humble-intra-process-demo
  stage_28_job_73:
    name: examples-rclpy-minimal-subscriber examples-rclpy-minimal-service examples-rclpy-minimal-publisher
      examples-rclpy-minimal-client examples-rclpy-minimal-action-server
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-examples-rclpy-minimal-subscriber ros-humble-examples-rclpy-minimal-service
          ros-humble-examples-rclpy-minimal-publisher ros-humble-examples-rclpy-minimal-client
          ros-humble-examples-rclpy-minimal-action-server
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-examples-rclpy-minimal-subscriber ros-humble-examples-rclpy-minimal-service
        ros-humble-examples-rclpy-minimal-publisher ros-humble-examples-rclpy-minimal-client
        ros-humble-examples-rclpy-minimal-action-server
  stage_28_job_74:
    name: examples-rclpy-minimal-action-client examples-rclpy-executors examples-rclcpp-multithreaded-executor
      examples-rclcpp-minimal-timer examples-rclcpp-minimal-service
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-examples-rclpy-minimal-action-client ros-humble-examples-rclpy-executors
          ros-humble-examples-rclcpp-multithreaded-executor ros-humble-examples-rclcpp-minimal-timer
          ros-humble-examples-rclcpp-minimal-service
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-examples-rclpy-minimal-action-client ros-humble-examples-rclpy-executors
        ros-humble-examples-rclcpp-multithreaded-executor ros-humble-examples-rclcpp-minimal-timer
        ros-humble-examples-rclcpp-minimal-service
  stage_28_job_75:
    name: examples-rclcpp-minimal-publisher examples-rclcpp-minimal-client action-tutorials-py
      turtlebot3-teleop turtlebot3-example
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-examples-rclcpp-minimal-publisher ros-humble-examples-rclcpp-minimal-client
          ros-humble-action-tutorials-py ros-humble-turtlebot3-teleop ros-humble-turtlebot3-example
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-examples-rclcpp-minimal-publisher ros-humble-examples-rclcpp-minimal-client
        ros-humble-action-tutorials-py ros-humble-turtlebot3-teleop ros-humble-turtlebot3-example
  stage_28_job_76:
    name: key-teleop bno055
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_67
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-key-teleop ros-humble-bno055
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-key-teleop ros-humble-bno055
  stage_29_job_77:
    name: launch-testing-ros message-filters tf2-ros-py parameter-traits nav2-common
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-testing-ros ros-humble-message-filters
          ros-humble-tf2-ros-py ros-humble-parameter-traits ros-humble-nav2-common
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-testing-ros ros-humble-message-filters ros-humble-tf2-ros-py
        ros-humble-parameter-traits ros-humble-nav2-common
  stage_29_job_78:
    name: moveit-configs-utils rosbag2-storage bondcpp hardware-interface realtime-tools
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-configs-utils ros-humble-rosbag2-storage
          ros-humble-bondcpp ros-humble-hardware-interface ros-humble-realtime-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-configs-utils ros-humble-rosbag2-storage ros-humble-bondcpp
        ros-humble-hardware-interface ros-humble-realtime-tools
  stage_29_job_79:
    name: kinematics-interface ros2lifecycle-test-fixtures rqt-gui-py joy camera-info-manager
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-kinematics-interface ros-humble-ros2lifecycle-test-fixtures
          ros-humble-rqt-gui-py ros-humble-joy ros-humble-camera-info-manager
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-kinematics-interface ros-humble-ros2lifecycle-test-fixtures
        ros-humble-rqt-gui-py ros-humble-joy ros-humble-camera-info-manager
  stage_29_job_80:
    name: topic-tools ros2multicast joint-limits rosbridge-library joy-teleop
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-topic-tools ros-humble-ros2multicast ros-humble-joint-limits
          ros-humble-rosbridge-library ros-humble-joy-teleop
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-topic-tools ros-humble-ros2multicast ros-humble-joint-limits
        ros-humble-rosbridge-library ros-humble-joy-teleop
  stage_29_job_81:
    name: turtlesim topic-monitor quality-of-service-demo-cpp examples-rclcpp-minimal-subscriber
      examples-rclcpp-minimal-composition
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-turtlesim ros-humble-topic-monitor ros-humble-quality-of-service-demo-cpp
          ros-humble-examples-rclcpp-minimal-subscriber ros-humble-examples-rclcpp-minimal-composition
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-turtlesim ros-humble-topic-monitor ros-humble-quality-of-service-demo-cpp
        ros-humble-examples-rclcpp-minimal-subscriber ros-humble-examples-rclcpp-minimal-composition
  stage_29_job_82:
    name: examples-rclcpp-minimal-action-server examples-rclcpp-minimal-action-client
      depthimage-to-laserscan action-tutorials-cpp serial-driver
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-examples-rclcpp-minimal-action-server ros-humble-examples-rclcpp-minimal-action-client
          ros-humble-depthimage-to-laserscan ros-humble-action-tutorials-cpp ros-humble-serial-driver
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-examples-rclcpp-minimal-action-server ros-humble-examples-rclcpp-minimal-action-client
        ros-humble-depthimage-to-laserscan ros-humble-action-tutorials-cpp ros-humble-serial-driver
  stage_29_job_83:
    name: lanelet2-examples udp-driver stubborn-buddies
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_68
    - stage_28_job_69
    - stage_28_job_70
    - stage_28_job_71
    - stage_28_job_72
    - stage_28_job_73
    - stage_28_job_74
    - stage_28_job_75
    - stage_28_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-lanelet2-examples ros-humble-udp-driver ros-humble-stubborn-buddies
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-lanelet2-examples ros-humble-udp-driver ros-humble-stubborn-buddies
  stage_30_job_84:
    name: ros2topic tf2-ros generate-parameter-library ros2test nav2-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ros2topic ros-humble-tf2-ros ros-humble-generate-parameter-library
          ros-humble-ros2test ros-humble-nav2-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ros2topic ros-humble-tf2-ros ros-humble-generate-parameter-library
        ros-humble-ros2test ros-humble-nav2-msgs
  stage_30_job_85:
    name: image-transport rosbag2-storage-mcap rosbag2-storage-default-plugins diagnostic-updater
      nav2-voxel-grid
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-image-transport ros-humble-rosbag2-storage-mcap
          ros-humble-rosbag2-storage-default-plugins ros-humble-diagnostic-updater
          ros-humble-nav2-voxel-grid
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-image-transport ros-humble-rosbag2-storage-mcap ros-humble-rosbag2-storage-default-plugins
        ros-humble-diagnostic-updater ros-humble-nav2-voxel-grid
  stage_30_job_86:
    name: ros2pkg ros2service ros2node hardware-interface-testing controller-interface
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ros2pkg ros-humble-ros2service ros-humble-ros2node
          ros-humble-hardware-interface-testing ros-humble-controller-interface
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ros2pkg ros-humble-ros2service ros-humble-ros2node ros-humble-hardware-interface-testing
        ros-humble-controller-interface
  stage_30_job_87:
    name: kinematics-interface-kdl pcl-conversions ros2interface ros2doctor ros2action
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-kinematics-interface-kdl ros-humble-pcl-conversions
          ros-humble-ros2interface ros-humble-ros2doctor ros-humble-ros2action
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-kinematics-interface-kdl ros-humble-pcl-conversions ros-humble-ros2interface
        ros-humble-ros2doctor ros-humble-ros2action
  stage_30_job_88:
    name: rqt-console teleop-twist-joy camera-calibration transmission-interface tf2-tools
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-console ros-humble-teleop-twist-joy ros-humble-camera-calibration
          ros-humble-transmission-interface ros-humble-tf2-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-console ros-humble-teleop-twist-joy ros-humble-camera-calibration
        ros-humble-transmission-interface ros-humble-tf2-tools
  stage_30_job_89:
    name: rqt-plot rqt-robot-monitor rqt-topic rqt-shell rqt-service-caller
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-plot ros-humble-rqt-robot-monitor ros-humble-rqt-topic
          ros-humble-rqt-shell ros-humble-rqt-service-caller
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-plot ros-humble-rqt-robot-monitor ros-humble-rqt-topic
        ros-humble-rqt-shell ros-humble-rqt-service-caller
  stage_30_job_90:
    name: rqt-py-console rqt-publisher rqt-graph ros2-controllers-test-nodes logging-demo
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-py-console ros-humble-rqt-publisher ros-humble-rqt-graph
          ros-humble-ros2-controllers-test-nodes ros-humble-logging-demo
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-py-console ros-humble-rqt-publisher ros-humble-rqt-graph
        ros-humble-ros2-controllers-test-nodes ros-humble-logging-demo
  stage_30_job_91:
    name: image-tools demo-nodes-cpp-native demo-nodes-cpp composition rqt-image-overlay-layer
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-image-tools ros-humble-demo-nodes-cpp-native ros-humble-demo-nodes-cpp
          ros-humble-composition ros-humble-rqt-image-overlay-layer
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-image-tools ros-humble-demo-nodes-cpp-native ros-humble-demo-nodes-cpp
        ros-humble-composition ros-humble-rqt-image-overlay-layer
  stage_30_job_92:
    name: rqt-robot-steering teleop-tools rqt lanelet2 bond-core
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_77
    - stage_29_job_78
    - stage_29_job_79
    - stage_29_job_80
    - stage_29_job_81
    - stage_29_job_82
    - stage_29_job_83
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-robot-steering ros-humble-teleop-tools ros-humble-rqt
          ros-humble-lanelet2 ros-humble-bond-core
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-robot-steering ros-humble-teleop-tools ros-humble-rqt
        ros-humble-lanelet2 ros-humble-bond-core
  stage_31_job_93:
    name: joint-state-publisher robot-state-publisher tf2-kdl tf2-geometry-msgs tf2-eigen
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-joint-state-publisher ros-humble-robot-state-publisher
          ros-humble-tf2-kdl ros-humble-tf2-geometry-msgs ros-humble-tf2-eigen
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-joint-state-publisher ros-humble-robot-state-publisher
        ros-humble-tf2-kdl ros-humble-tf2-geometry-msgs ros-humble-tf2-eigen
  stage_31_job_94:
    name: ros-testing rosbag2-cpp tf2-sensor-msgs ros2run ros2param
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ros-testing ros-humble-rosbag2-cpp ros-humble-tf2-sensor-msgs
          ros-humble-ros2run ros-humble-ros2param
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ros-testing ros-humble-rosbag2-cpp ros-humble-tf2-sensor-msgs
        ros-humble-ros2run ros-humble-ros2param
  stage_31_job_95:
    name: control-toolbox ros2launch theora-image-transport compressed-image-transport
      compressed-depth-image-transport
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-control-toolbox ros-humble-ros2launch ros-humble-theora-image-transport
          ros-humble-compressed-image-transport ros-humble-compressed-depth-image-transport
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-control-toolbox ros-humble-ros2launch ros-humble-theora-image-transport
        ros-humble-compressed-image-transport ros-humble-compressed-depth-image-transport
  stage_31_job_96:
    name: nav2-simple-commander image-proc ros2lifecycle joy-linux image-view
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-simple-commander ros-humble-image-proc ros-humble-ros2lifecycle
          ros-humble-joy-linux ros-humble-image-view
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-simple-commander ros-humble-image-proc ros-humble-ros2lifecycle
        ros-humble-joy-linux ros-humble-image-view
  stage_31_job_97:
    name: image-publisher tf2-bullet rqt-msg rqt-reconfigure rqt-image-view
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-image-publisher ros-humble-tf2-bullet ros-humble-rqt-msg
          ros-humble-rqt-reconfigure ros-humble-rqt-image-view
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-image-publisher ros-humble-tf2-bullet ros-humble-rqt-msg
        ros-humble-rqt-reconfigure ros-humble-rqt-image-view
  stage_31_job_98:
    name: turtlebot3-node laser-filters image-common rqt-robot-dashboard rqt-moveit
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-turtlebot3-node ros-humble-laser-filters ros-humble-image-common
          ros-humble-rqt-robot-dashboard ros-humble-rqt-moveit
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-turtlebot3-node ros-humble-laser-filters ros-humble-image-common
        ros-humble-rqt-robot-dashboard ros-humble-rqt-moveit
  stage_31_job_99:
    name: robot-controllers-interface apriltag-ros
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_84
    - stage_30_job_85
    - stage_30_job_86
    - stage_30_job_87
    - stage_30_job_88
    - stage_30_job_89
    - stage_30_job_90
    - stage_30_job_91
    - stage_30_job_92
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-robot-controllers-interface ros-humble-apriltag-ros
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-robot-controllers-interface ros-humble-apriltag-ros
  stage_32_job_100:
    name: joint-state-publisher-gui rviz-common interactive-markers moveit-resources-fanuc-moveit-config
      nav2-util
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_93
    - stage_31_job_94
    - stage_31_job_95
    - stage_31_job_96
    - stage_31_job_97
    - stage_31_job_98
    - stage_31_job_99
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-joint-state-publisher-gui ros-humble-rviz-common
          ros-humble-interactive-markers ros-humble-moveit-resources-fanuc-moveit-config
          ros-humble-nav2-util
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-joint-state-publisher-gui ros-humble-rviz-common ros-humble-interactive-markers
        ros-humble-moveit-resources-fanuc-moveit-config ros-humble-nav2-util
  stage_32_job_101:
    name: warehouse-ros rosbag2-compression controller-manager gazebo-ros image-transport-plugins
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_93
    - stage_31_job_94
    - stage_31_job_95
    - stage_31_job_96
    - stage_31_job_97
    - stage_31_job_98
    - stage_31_job_99
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-warehouse-ros ros-humble-rosbag2-compression ros-humble-controller-manager
          ros-humble-gazebo-ros ros-humble-image-transport-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-warehouse-ros ros-humble-rosbag2-compression ros-humble-controller-manager
        ros-humble-gazebo-ros ros-humble-image-transport-plugins
  stage_32_job_102:
    name: sros2 ros2component stereo-image-proc image-rotate depth-image-proc
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_93
    - stage_31_job_94
    - stage_31_job_95
    - stage_31_job_96
    - stage_31_job_97
    - stage_31_job_98
    - stage_31_job_99
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-sros2 ros-humble-ros2component ros-humble-stereo-image-proc
          ros-humble-image-rotate ros-humble-depth-image-proc
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-sros2 ros-humble-ros2component ros-humble-stereo-image-proc
        ros-humble-image-rotate ros-humble-depth-image-proc
  stage_32_job_103:
    name: pcl-ros rosapi geometry2 rqt-srv rqt-action
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_93
    - stage_31_job_94
    - stage_31_job_95
    - stage_31_job_96
    - stage_31_job_97
    - stage_31_job_98
    - stage_31_job_99
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-pcl-ros ros-humble-rosapi ros-humble-geometry2
          ros-humble-rqt-srv ros-humble-rqt-action
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-pcl-ros ros-humble-rosapi ros-humble-geometry2 ros-humble-rqt-srv
        ros-humble-rqt-action
  stage_32_job_104:
    name: lifecycle dummy-robot-bringup turtlebot3-fake-node system-modes rosx-introspection
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_93
    - stage_31_job_94
    - stage_31_job_95
    - stage_31_job_96
    - stage_31_job_97
    - stage_31_job_98
    - stage_31_job_99
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-lifecycle ros-humble-dummy-robot-bringup ros-humble-turtlebot3-fake-node
          ros-humble-system-modes ros-humble-rosx-introspection
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-lifecycle ros-humble-dummy-robot-bringup ros-humble-turtlebot3-fake-node
        ros-humble-system-modes ros-humble-rosx-introspection
  stage_33_job_105:
    name: moveit-resources-panda-moveit-config rviz-visual-testing-framework nav2-map-server
      nav2-lifecycle-manager rosbag2-compression-zstd
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_100
    - stage_32_job_101
    - stage_32_job_102
    - stage_32_job_103
    - stage_32_job_104
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-resources-panda-moveit-config ros-humble-rviz-visual-testing-framework
          ros-humble-nav2-map-server ros-humble-nav2-lifecycle-manager ros-humble-rosbag2-compression-zstd
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-resources-panda-moveit-config ros-humble-rviz-visual-testing-framework
        ros-humble-nav2-map-server ros-humble-nav2-lifecycle-manager ros-humble-rosbag2-compression-zstd
  stage_33_job_106:
    name: nav-2d-utils forward-command-controller steering-controllers-library joint-trajectory-controller
      nav2-behavior-tree
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_100
    - stage_32_job_101
    - stage_32_job_102
    - stage_32_job_103
    - stage_32_job_104
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav-2d-utils ros-humble-forward-command-controller
          ros-humble-steering-controllers-library ros-humble-joint-trajectory-controller
          ros-humble-nav2-behavior-tree
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav-2d-utils ros-humble-forward-command-controller ros-humble-steering-controllers-library
        ros-humble-joint-trajectory-controller ros-humble-nav2-behavior-tree
  stage_33_job_107:
    name: tricycle-controller range-sensor-broadcaster pose-broadcaster pid-controller
      joint-state-broadcaster
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_100
    - stage_32_job_101
    - stage_32_job_102
    - stage_32_job_103
    - stage_32_job_104
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-tricycle-controller ros-humble-range-sensor-broadcaster
          ros-humble-pose-broadcaster ros-humble-pid-controller ros-humble-joint-state-broadcaster
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-tricycle-controller ros-humble-range-sensor-broadcaster
        ros-humble-pose-broadcaster ros-humble-pid-controller ros-humble-joint-state-broadcaster
  stage_33_job_108:
    name: imu-sensor-broadcaster gripper-controllers gpio-controllers force-torque-sensor-broadcaster
      diff-drive-controller
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_100
    - stage_32_job_101
    - stage_32_job_102
    - stage_32_job_103
    - stage_32_job_104
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-imu-sensor-broadcaster ros-humble-gripper-controllers
          ros-humble-gpio-controllers ros-humble-force-torque-sensor-broadcaster ros-humble-diff-drive-controller
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-imu-sensor-broadcaster ros-humble-gripper-controllers
        ros-humble-gpio-controllers ros-humble-force-torque-sensor-broadcaster ros-humble-diff-drive-controller
  stage_33_job_109:
    name: nav2-velocity-smoother ros2controlcli sros2-cmake ros2cli-common-extensions
      gazebo-ros2-control
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_100
    - stage_32_job_101
    - stage_32_job_102
    - stage_32_job_103
    - stage_32_job_104
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-velocity-smoother ros-humble-ros2controlcli
          ros-humble-sros2-cmake ros-humble-ros2cli-common-extensions ros-humble-gazebo-ros2-control
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-velocity-smoother ros-humble-ros2controlcli ros-humble-sros2-cmake
        ros-humble-ros2cli-common-extensions ros-humble-gazebo-ros2-control
  stage_33_job_110:
    name: image-pipeline gazebo-plugins warehouse-ros-sqlite rosbridge-server perception-pcl
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_100
    - stage_32_job_101
    - stage_32_job_102
    - stage_32_job_103
    - stage_32_job_104
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-image-pipeline ros-humble-gazebo-plugins ros-humble-warehouse-ros-sqlite
          ros-humble-rosbridge-server ros-humble-perception-pcl
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-image-pipeline ros-humble-gazebo-plugins ros-humble-warehouse-ros-sqlite
        ros-humble-rosbridge-server ros-humble-perception-pcl
  stage_34_job_111:
    name: moveit-core rviz-default-plugins nav2-costmap-2d rosbag2-transport velocity-controllers
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_33_job_105
    - stage_33_job_106
    - stage_33_job_107
    - stage_33_job_108
    - stage_33_job_109
    - stage_33_job_110
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-core ros-humble-rviz-default-plugins ros-humble-nav2-costmap-2d
          ros-humble-rosbag2-transport ros-humble-velocity-controllers
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-core ros-humble-rviz-default-plugins ros-humble-nav2-costmap-2d
        ros-humble-rosbag2-transport ros-humble-velocity-controllers
  stage_34_job_112:
    name: tricycle-steering-controller position-controllers effort-controllers bicycle-steering-controller
      admittance-controller
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_33_job_105
    - stage_33_job_106
    - stage_33_job_107
    - stage_33_job_108
    - stage_33_job_109
    - stage_33_job_110
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-tricycle-steering-controller ros-humble-position-controllers
          ros-humble-effort-controllers ros-humble-bicycle-steering-controller ros-humble-admittance-controller
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-tricycle-steering-controller ros-humble-position-controllers
        ros-humble-effort-controllers ros-humble-bicycle-steering-controller ros-humble-admittance-controller
  stage_34_job_113:
    name: ackermann-steering-controller ros2-control ros-core gazebo-ros-pkgs rosbridge-suite
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_33_job_105
    - stage_33_job_106
    - stage_33_job_107
    - stage_33_job_108
    - stage_33_job_109
    - stage_33_job_110
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ackermann-steering-controller ros-humble-ros2-control
          ros-humble-ros-core ros-humble-gazebo-ros-pkgs ros-humble-rosbridge-suite
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ackermann-steering-controller ros-humble-ros2-control
        ros-humble-ros-core ros-humble-gazebo-ros-pkgs ros-humble-rosbridge-suite
  stage_34_job_114:
    name: moveit-resources aws-robomaker-small-warehouse-world
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_33_job_105
    - stage_33_job_106
    - stage_33_job_107
    - stage_33_job_108
    - stage_33_job_109
    - stage_33_job_110
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-resources ros-humble-aws-robomaker-small-warehouse-world
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-resources ros-humble-aws-robomaker-small-warehouse-world
  stage_35_job_115:
    name: moveit-ros-occupancy-map-monitor rviz2 moveit-simple-controller-manager
      moveit-resources-prbt-ikfast-manipulator-plugin nav2-core
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_34_job_111
    - stage_34_job_112
    - stage_34_job_113
    - stage_34_job_114
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-occupancy-map-monitor ros-humble-rviz2
          ros-humble-moveit-simple-controller-manager ros-humble-moveit-resources-prbt-ikfast-manipulator-plugin
          ros-humble-nav2-core
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-occupancy-map-monitor ros-humble-rviz2 ros-humble-moveit-simple-controller-manager
        ros-humble-moveit-resources-prbt-ikfast-manipulator-plugin ros-humble-nav2-core
  stage_35_job_116:
    name: costmap-queue pilz-industrial-motion-planner-testutils rosbag2-py chomp-motion-planner
      nav2-rviz-plugins
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_34_job_111
    - stage_34_job_112
    - stage_34_job_113
    - stage_34_job_114
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-costmap-queue ros-humble-pilz-industrial-motion-planner-testutils
          ros-humble-rosbag2-py ros-humble-chomp-motion-planner ros-humble-nav2-rviz-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-costmap-queue ros-humble-pilz-industrial-motion-planner-testutils
        ros-humble-rosbag2-py ros-humble-chomp-motion-planner ros-humble-nav2-rviz-plugins
  stage_35_job_117:
    name: nav2-collision-monitor ros2-controllers turtlebot3-gazebo gazebo-ros2-control-demos
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_34_job_111
    - stage_34_job_112
    - stage_34_job_113
    - stage_34_job_114
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-collision-monitor ros-humble-ros2-controllers
          ros-humble-turtlebot3-gazebo ros-humble-gazebo-ros2-control-demos
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-collision-monitor ros-humble-ros2-controllers ros-humble-turtlebot3-gazebo
        ros-humble-gazebo-ros2-control-demos
  stage_36_job_118:
    name: moveit-ros-planning dwb-core nav2-regulated-pure-pursuit-controller nav2-controller
      ros2bag
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_115
    - stage_35_job_116
    - stage_35_job_117
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-planning ros-humble-dwb-core ros-humble-nav2-regulated-pure-pursuit-controller
          ros-humble-nav2-controller ros-humble-ros2bag
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-planning ros-humble-dwb-core ros-humble-nav2-regulated-pure-pursuit-controller
        ros-humble-nav2-controller ros-humble-ros2bag
  stage_36_job_119:
    name: ur-description nav2-theta-star-planner nav2-smoother nav2-smac-planner nav2-planner
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_115
    - stage_35_job_116
    - stage_35_job_117
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ur-description ros-humble-nav2-theta-star-planner
          ros-humble-nav2-smoother ros-humble-nav2-smac-planner ros-humble-nav2-planner
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ur-description ros-humble-nav2-theta-star-planner ros-humble-nav2-smoother
        ros-humble-nav2-smac-planner ros-humble-nav2-planner
  stage_36_job_120:
    name: nav2-navfn-planner nav2-mppi-controller nav2-constrained-smoother nav2-bt-navigator
      nav2-behaviors
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_115
    - stage_35_job_116
    - stage_35_job_117
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-navfn-planner ros-humble-nav2-mppi-controller
          ros-humble-nav2-constrained-smoother ros-humble-nav2-bt-navigator ros-humble-nav2-behaviors
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-navfn-planner ros-humble-nav2-mppi-controller ros-humble-nav2-constrained-smoother
        ros-humble-nav2-bt-navigator ros-humble-nav2-behaviors
  stage_36_job_121:
    name: moveit-plugins moveit-planners-chomp rqt-bag rviz-visual-tools urdf-launch
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_115
    - stage_35_job_116
    - stage_35_job_117
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-plugins ros-humble-moveit-planners-chomp
          ros-humble-rqt-bag ros-humble-rviz-visual-tools ros-humble-urdf-launch
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-plugins ros-humble-moveit-planners-chomp ros-humble-rqt-bag
        ros-humble-rviz-visual-tools ros-humble-urdf-launch
  stage_36_job_122:
    name: turtlebot3-bringup turtlebot3-simulations
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_115
    - stage_35_job_116
    - stage_35_job_117
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-turtlebot3-bringup ros-humble-turtlebot3-simulations
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-turtlebot3-bringup ros-humble-turtlebot3-simulations
  stage_37_job_123:
    name: moveit-kinematics moveit-ros-warehouse moveit-planners-ompl moveit-ros-robot-interaction
      dwb-plugins
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_36_job_118
    - stage_36_job_119
    - stage_36_job_120
    - stage_36_job_121
    - stage_36_job_122
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-kinematics ros-humble-moveit-ros-warehouse
          ros-humble-moveit-planners-ompl ros-humble-moveit-ros-robot-interaction
          ros-humble-dwb-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-kinematics ros-humble-moveit-ros-warehouse ros-humble-moveit-planners-ompl
        ros-humble-moveit-ros-robot-interaction ros-humble-dwb-plugins
  stage_37_job_124:
    name: dwb-critics nav2-rotation-shim-controller rosbag2-tests moveit-visual-tools
      urdf-tutorial
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_36_job_118
    - stage_36_job_119
    - stage_36_job_120
    - stage_36_job_121
    - stage_36_job_122
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-dwb-critics ros-humble-nav2-rotation-shim-controller
          ros-humble-rosbag2-tests ros-humble-moveit-visual-tools ros-humble-urdf-tutorial
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-dwb-critics ros-humble-nav2-rotation-shim-controller
        ros-humble-rosbag2-tests ros-humble-moveit-visual-tools ros-humble-urdf-tutorial
  stage_38_job_125:
    name: moveit-ros-move-group moveit-ros-benchmarks nav2-dwb-controller rosbag2
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_37_job_123
    - stage_37_job_124
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-move-group ros-humble-moveit-ros-benchmarks
          ros-humble-nav2-dwb-controller ros-humble-rosbag2
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-move-group ros-humble-moveit-ros-benchmarks
        ros-humble-nav2-dwb-controller ros-humble-rosbag2
  stage_39_job_126:
    name: moveit-ros-planning-interface moveit-resources-prbt-moveit-config navigation2
      rqt-bag-plugins ros-base
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_38_job_125
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-planning-interface ros-humble-moveit-resources-prbt-moveit-config
          ros-humble-navigation2 ros-humble-rqt-bag-plugins ros-humble-ros-base
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-planning-interface ros-humble-moveit-resources-prbt-moveit-config
        ros-humble-navigation2 ros-humble-rqt-bag-plugins ros-humble-ros-base
  stage_40_job_127:
    name: moveit-ros-visualization moveit-resources-prbt-pg70-support nav2-bringup
      moveit-servo rqt-common-plugins
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_39_job_126
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-visualization ros-humble-moveit-resources-prbt-pg70-support
          ros-humble-nav2-bringup ros-humble-moveit-servo ros-humble-rqt-common-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-visualization ros-humble-moveit-resources-prbt-pg70-support
        ros-humble-nav2-bringup ros-humble-moveit-servo ros-humble-rqt-common-plugins
  stage_40_job_128:
    name: simulation perception
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_39_job_126
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-simulation ros-humble-perception
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-simulation ros-humble-perception
  stage_41_job_129:
    name: moveit-setup-framework pilz-industrial-motion-planner moveit-ros ur-moveit-config
      turtlebot3-navigation2
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_40_job_127
    - stage_40_job_128
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-setup-framework ros-humble-pilz-industrial-motion-planner
          ros-humble-moveit-ros ros-humble-ur-moveit-config ros-humble-turtlebot3-navigation2
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-setup-framework ros-humble-pilz-industrial-motion-planner
        ros-humble-moveit-ros ros-humble-ur-moveit-config ros-humble-turtlebot3-navigation2
  stage_41_job_130:
    name: desktop
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_40_job_127
    - stage_40_job_128
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-desktop
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-desktop
  stage_42_job_131:
    name: moveit-setup-core-plugins moveit-setup-controllers moveit-setup-app-plugins
      moveit-setup-srdf-plugins moveit-planners
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_41_job_129
    - stage_41_job_130
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-setup-core-plugins ros-humble-moveit-setup-controllers
          ros-humble-moveit-setup-app-plugins ros-humble-moveit-setup-srdf-plugins
          ros-humble-moveit-planners
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-setup-core-plugins ros-humble-moveit-setup-controllers
        ros-humble-moveit-setup-app-plugins ros-humble-moveit-setup-srdf-plugins ros-humble-moveit-planners
  stage_42_job_132:
    name: turtlebot3 desktop-full
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_41_job_129
    - stage_41_job_130
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-turtlebot3 ros-humble-desktop-full
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-turtlebot3 ros-humble-desktop-full
  stage_43_job_133:
    name: moveit-setup-assistant moveit
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_42_job_131
    - stage_42_job_132
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.39.4
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-staging -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-setup-assistant ros-humble-moveit
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-setup-assistant ros-humble-moveit
name: build_win
on:
  push:
    branches:
    - buildbranch_win
