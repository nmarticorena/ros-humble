jobs:
  stage_0_job_0:
    name: dynmsg wasm-cpp ffmpeg-encoder-decoder rmw-wasm-cpp
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build ros-humble-dynmsg ros-humble-wasm-cpp ros-humble-ffmpeg-encoder-decoder
        ros-humble-rmw-wasm-cpp
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-dynmsg ros-humble-wasm-cpp ros-humble-ffmpeg-encoder-decoder
          ros-humble-rmw-wasm-cpp
        BUILD_TARGET: linux-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/build_unix.sh --target $BUILD_TARGET
  stage_1_job_1:
    name: test-wasm
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build ros-humble-test-wasm
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-test-wasm
        BUILD_TARGET: linux-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/build_unix.sh --target $BUILD_TARGET
name: build_linux
on:
  push:
    branches:
    - buildbranch_linux_aarch64
