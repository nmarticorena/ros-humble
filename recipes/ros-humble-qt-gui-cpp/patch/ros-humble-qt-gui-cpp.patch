diff --git a/src/qt_gui_cpp_sip/CMakeLists.txt b/src/qt_gui_cpp_sip/CMakeLists.txt
index 89b1e80c..3f494f17 100644
--- a/src/qt_gui_cpp_sip/CMakeLists.txt
+++ b/src/qt_gui_cpp_sip/CMakeLists.txt
@@ -28,23 +28,29 @@ set(qt_gui_cpp_sip_DEPENDENT_FILES
 
 # maintain context for different named target
 set(qt_gui_cpp_sip_INCLUDE_DIRS ${qt_gui_cpp_INCLUDE_DIRS} "${CMAKE_CURRENT_SOURCE_DIR}/../../include")
-set(qt_gui_cpp_sip_LIBRARY_DIRS ${qt_gui_cpp_LIBRARY_DIRS} lib)
+set(qt_gui_cpp_sip_LIBRARY_DIRS ${CMAKE_BINARY_DIR})
 set(qt_gui_cpp_sip_LDFLAGS_OTHER ${qt_gui_cpp_LDFLAGS_OTHER})
 
 ament_get_recursive_properties(deps_include_dirs deps_libraries ${pluginlib_TARGETS})
 list(APPEND deps_include_dirs ${TinyXML2_INCLUDE_DIRS})
 list(APPEND deps_libraries ${TinyXML2_LIBRARIES})
 
-find_package(Python3 REQUIRED COMPONENTS Development)
+find_package(Python REQUIRED COMPONENTS Interpreter Development)
+find_package(OpenGL REQUIRED)
 
 set(_qt_gui_cpp_sip_LIBRARIES
   ${deps_libraries}
-  Python3::Python
   qt_gui_cpp
+  OpenGL::GL
 )
 
+if(NOT APPLE)
+  set(_qt_gui_cpp_sip_LIBRARIES ${_qt_gui_cpp_sip_LIBRARIES} Python::Python)
+endif()
+
 # sip needs libraries to have resolved paths and cannot link to cmake targets
-foreach(_lib_name ${_qt_gui_cpp_sip_LIBRARIES})
+foreach(_lib_name_raw ${_qt_gui_cpp_sip_LIBRARIES})
+  string(REGEX REPLACE "\\.so\\.[0-9,\\.]*" ".so" _lib_name ${_lib_name_raw})
   if(TARGET ${_lib_name})
     # Use a nifty cmake generator expression to resolve the target location
     list(APPEND qt_gui_cpp_sip_LIBRARIES $<TARGET_FILE:${_lib_name}>)
@@ -75,11 +81,20 @@ if(sip_helper_FOUND)
   )
 
   if(APPLE)
-    set(LIBQT_GUI_CPP_SIP_SUFFIX .so)
+    # Okay-ish hack for now
+    if(${SIP_VERSION} VERSION_GREATER_EQUAL "5.0.0")
+      set(LIBQT_GUI_CPP_SIP_SUFFIX ".cpython-${Python_VERSION_MAJOR}${Python_VERSION_MINOR}-darwin.so")
+    else()
+      set(LIBQT_GUI_CPP_SIP_SUFFIX .so)
+    endif()
   elseif(WIN32)
     set(LIBQT_GUI_CPP_SIP_SUFFIX .pyd)
   else()
-    set(LIBQT_GUI_CPP_SIP_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
+    if(${SIP_VERSION} VERSION_GREATER_EQUAL "5.0.0")
+      set(LIBQT_GUI_CPP_SIP_SUFFIX ".cpython-${Python_VERSION_MAJOR}${Python_VERSION_MINOR}-${CMAKE_HOST_SYSTEM_PROCESSOR}-linux-gnu${CMAKE_SHARED_LIBRARY_SUFFIX}")
+    else()
+      set(LIBQT_GUI_CPP_SIP_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
+    endif()
   endif()
 
   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libqt_gui_cpp_sip${LIBQT_GUI_CPP_SIP_SUFFIX}
diff --git a/toolchain_patch.diff b/toolchain_patch.diff
new file mode 100644
index 00000000..37226a6a
--- /dev/null
+++ b/toolchain_patch.diff
@@ -0,0 +1,27 @@
+--- a/mkspecs/features/toolchain.prf
++++ b/mkspecs/features/toolchain.prf
+@@ -288,9 +288,12 @@ isEmpty($${target_prefix}.INCDIRS) {
+                 }
+             }
+         }
+-        isEmpty(QMAKE_DEFAULT_LIBDIRS)|isEmpty(QMAKE_DEFAULT_INCDIRS): \
++        isEmpty(QMAKE_DEFAULT_INCDIRS): \
+             !integrity: \
+-                error("failed to parse default search paths from compiler output")
++                error("failed to parse default include paths from compiler output")
++        isEmpty(QMAKE_DEFAULT_LIBDIRS): \
++            !integrity:!darwin: \
++                error("failed to parse default library paths from compiler output")
+         QMAKE_DEFAULT_LIBDIRS = $$unique(QMAKE_DEFAULT_LIBDIRS)
+     } else: ghs {
+         cmd = $$QMAKE_CXX $$QMAKE_CXXFLAGS -$${LITERAL_HASH} -o /tmp/fake_output /tmp/fake_input.cpp
+@@ -411,7 +414,7 @@ isEmpty($${target_prefix}.INCDIRS) {
+         QMAKE_DEFAULT_INCDIRS = $$split(INCLUDE, $$QMAKE_DIRLIST_SEP)
+     }
+ 
+-    unix:if(!cross_compile|host_build) {
++    unix:!darwin:if(!cross_compile|host_build) {
+         isEmpty(QMAKE_DEFAULT_INCDIRS): QMAKE_DEFAULT_INCDIRS = /usr/include /usr/local/include
+         isEmpty(QMAKE_DEFAULT_LIBDIRS): QMAKE_DEFAULT_LIBDIRS = /lib /usr/lib
+     }
+
