# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json

package:
  name: ros-humble-visp
  version: 3.5.0
source:
  git: https://github.com/ros2-gbp/visp-release.git
  tag: release/humble/visp/3.5.0-2
  target_directory: ros-humble-visp/src/work

build:
  script: ${{ '$RECIPE_DIR/build_catkin.sh' if unix or emscripten-wasm32 else '%RECIPE_DIR%\\bld_catkin.bat' }}
  number: 10
  post_process:
    - files:
        - '*.pc'
      regex: (?:-L|-I)?"?([^;\s]+/sysroot/)
      replacement: $$(CONDA_BUILD_SYSROOT_S)
    - files:
        - '*.cmake'
      regex: ([^;\s"]+/sysroot)
      replacement: $$ENV{CONDA_BUILD_SYSROOT}
    - files:
        - '*.cmake'
      regex: ([^;\s"]+/MacOSX\d*\.?\d*\.sdk)
      replacement: $$ENV{CONDA_BUILD_SYSROOT}
about:
  homepage: https://www.ros.org/
  license: BSD-3-Clause
  summary: |
    Robot Operating System

extra:
  recipe-maintainers:
    - ros-forge

requirements:
  build:
    - ${{ compiler('cxx') }}
    - ${{ compiler('c') }}
    - if: target_platform!='emscripten-wasm32'
      then:
        - ${{ stdlib('c') }}
    - ninja
    - python
    - setuptools
    - git
    - if: unix
      then:
        - patch
        - make
        - coreutils
    - if: win
      then:
        - m2-patch
    - if: osx
      then:
        - tapi
    - if: build_platform != target_platform
      then:
        - pkg-config
    - cmake
    - cython
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - numpy
    - if: build_platform != target_platform
      then:
        - doxygen
  host:
    - if: build_platform == target_platform
      then:
        - pkg-config
    - bzip2
    - eigen
    - graphviz
    - libjpeg-turbo
    - liblapack
    - libopencv
    - libpng
    - libxml2
    - numpy
    - pip
    - py-opencv
    - python
    - ros-humble-ros-environment
    - ros-humble-ros-workspace
    - ros2-distro-mutex 0.6.* humble_*
    - xorg-libx11
    - xorg-xorgproto
    - if: build_platform == target_platform
      then:
        - doxygen
    - if: linux
      then:
        - libgl-devel
        - libopengl-devel
    - if: unix
      then:
        - xorg-libx11
        - xorg-libxext
  run:
    - eigen
    - libjpeg-turbo
    - liblapack
    - libopencv
    - libpng
    - libxml2
    - py-opencv
    - python
    - ros-humble-ros-workspace
    - ros2-distro-mutex 0.6.* humble_*
    - xorg-libx11
    - xorg-xorgproto
    - if: osx and x86_64
      then:
        - __osx >=${{ MACOSX_DEPLOYMENT_TARGET|default('10.14') }}
    - if: unix
      then:
        - xorg-libx11
        - xorg-libxext
